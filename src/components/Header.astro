---
const menuLinks = [
  {
    text: "Programas",
    href: "/programas",
  },
  {
    text: "Instalaciones",
    href: "/instalaciones",
  },
  {
    text: "Profesores",
    href: "/profesores",
  },
  {
    text: "Contacto",
    href: "/contacto",
  },
];

// Dividir los enlaces en dos grupos para los lados izquierdo y derecho
const leftLinks = menuLinks.slice(0, 2);
const rightLinks = menuLinks.slice(2);
---

<header class="text-white fixed top-0 w-full z-50 bg-transparent">
  <nav
    class="flex items-center px-6 py-8 text-sm font-medium justify-between max-w-6xl mx-auto relative"
  >
    <!-- Botón menú móvil -->
    <button
      id="menuButton"
      class="lg:hidden p-2 hover:bg-gray-100 rounded-md"
      aria-label="Menú"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-6 w-6"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M4 6h16M4 12h16M4 18h16"></path>
      </svg>
    </button>

    <!-- Enlaces izquierdos -->
    <div class="hidden lg:flex gap-12">
      {
        leftLinks.map((link) => (
          <a
            href={link.href}
            class="text-xl hover:text-blue-600 transition-colors"
          >
            {link.text}
          </a>
        ))
      }
    </div>

    <!-- Enlaces derechos -->
    <div class="hidden lg:flex gap-12">
      {
        rightLinks.map((link) => (
          <a
            href={link.href}
            class="text-xl hover:text-blue-600 transition-colors"
          >
            {link.text}
          </a>
        ))
      }
    </div>

    <!-- Menú móvil -->
    <div
      id="mobileMenu"
      class="fixed inset-0 bg-white z-50 transform translate-x-full transition-transform duration-300 ease-in-out lg:hidden"
    >
      <div class="flex flex-col items-center justify-center h-full gap-8">
        <button
          id="closeMenuButton"
          class="absolute top-4 right-4 p-2 hover:bg-gray-100 rounded-md"
          aria-label="Cerrar menú"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-6 w-6"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
        {
          menuLinks.map((link) => (
            <a
              href={link.href}
              class="text-2xl hover:text-blue-600 transition-colors"
            >
              {link.text}
            </a>
          ))
        }
      </div>
    </div>
  </nav>
</header>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const menuButton = document.getElementById("menuButton");
    const closeMenuButton = document.getElementById("closeMenuButton");
    const mobileMenu = document.getElementById("mobileMenu");

    if (menuButton && mobileMenu && closeMenuButton) {
      menuButton.addEventListener("click", () => {
        mobileMenu.classList.remove("translate-x-full");
        document.body.style.overflow = "hidden";
      });

      closeMenuButton.addEventListener("click", () => {
        mobileMenu.classList.add("translate-x-full");
        document.body.style.overflow = "";
      });

      // Cerrar menú al hacer clic en un enlace
      const mobileLinks = mobileMenu.querySelectorAll("a");
      mobileLinks.forEach((link) => {
        link.addEventListener("click", () => {
          mobileMenu.classList.add("translate-x-full");
          document.body.style.overflow = "";
        });
      });

      // Cerrar menú al hacer clic fuera
      mobileMenu.addEventListener("click", (e) => {
        if (e.target === mobileMenu) {
          mobileMenu.classList.add("translate-x-full");
          document.body.style.overflow = "";
        }
      });
    }
  });
</script>
